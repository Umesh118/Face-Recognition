# -*- coding: utf-8 -*-
"""Encode faces.ipynb

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/1T7fFaFR4BWnqY_OlMxhU1LI3322YVPg6
"""

!wget --no-check-certificate \
      https://s3-us-west-2.amazonaws.com/static.pyimagesearch.com/face-recognition-opencv/face-recognition-opencv.zip \
      -O /content/face-recognition-opencv.zip

import os
import zipfile

local_zip = '/content/face-recognition-opencv.zip'
zip_ref = zipfile.ZipFile(local_zip, 'r')
zip_ref.extractall('')
zip_ref.close()

os.getcwd()

!pip install face_recognition

!pip install imutils

!pip install dlib

import argparse
import pickle
import cv2
import os
from imutils import paths

import numpy as np
import pandas as pd

import dlib
import face_recognition

print("[INFO] quantifying faces...")
imagePaths = list(paths.list_images('./face-recognition-opencv/dataset'))

len(imagePaths)

knownEncodings = []
knownNames = []

for (i, imagePath) in enumerate(imagePaths):
	# extract the person name from the image path
	print("[INFO] processing image {}/{}".format(i + 1,
		len(imagePaths)))
	name = imagePath.split(os.path.sep)[-2]

	# load the input image and convert it from RGB (OpenCV ordering)
	# to dlib ordering (RGB)
	image = cv2.imread(imagePath)
	rgb = cv2.cvtColor(image, cv2.COLOR_BGR2RGB)

	# detect the (x, y)-coordinates of the bounding boxes
	# corresponding to each face in the input image
	boxes = face_recognition.face_locations(rgb,
		model="cnn")

	# compute the facial embedding for the face
	encodings = face_recognition.face_encodings(rgb, boxes)

	# loop over the encodings
	for encoding in encodings:
		# add each encoding + name to our set of known names and
		# encodings
		knownEncodings.append(encoding)
		knownNames.append(name)

# dump the facial encodings + names to disk
print("[INFO] serializing encodings...")
data = {"encodings": knownEncodings, "names": knownNames}
f = open('./face-recognition-opencv/videos/encodings.pickle', "wb")
f.write(pickle.dumps(data))
f.close()

